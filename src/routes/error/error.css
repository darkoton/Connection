.error {
  flex: 1 1 auto;
  box-sizing: border-box;
  background-color: #000000;
  background-image: radial-gradient(#112258, #041607), url(/oldTV.gif);
  background-repeat: no-repeat;
  background-size: cover;
  font-family: 'Inconsolata', Helvetica, sans-serif;
  font-size: 1.5rem;
  color: rgba(41, 140, 232, 0.8);
  text-shadow:
    0 0 1ex #3593eb,
    0 0 2px rgba(255, 255, 255, 0.8);
}

.noise {
  pointer-events: none;
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: url(/oldTV.gif);
  background-repeat: no-repeat;
  background-size: cover;
  z-index: -1;
  opacity: .02;
}

.overlay {
  pointer-events: none;
  position: absolute;
  width: 100%;
  height: 100%;
  background:
    repeating-linear-gradient(180deg,
      rgba(0, 0, 0, 0) 0,
      rgba(0, 0, 0, 0.3) 50%,
      rgba(0, 0, 0, 0) 100%);
  background-size: auto 4px;
  z-index: 1;
}

.overlay::before {
  content: "";
  pointer-events: none;
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(0deg,
      transparent 0%,
      rgba(32, 85, 128, 0.2) 2%,
      rgba(32, 90, 128, 0.8) 3%,
      rgba(32, 62, 128, 0.2) 3%,
      transparent 100%);
  background-repeat: no-repeat;
  animation: scan 7.5s linear 0s infinite;
}

@keyframes scan {
  0% {
    background-position: 0 -100vh;
  }

  35%, 100% {
    background-position: 0 100vh;
  }
}

.terminal {
  box-sizing: inherit;
  height: 100%;
  width: 1000px;
  max-width: 100%;
  padding: 4rem;
  text-transform: uppercase;
}

.output {
  color: rgba(41, 140, 232, 0.8);
  text-shadow:
    0 0 1px rgba(51, 116, 255, 0.4),
    0 0 2px rgba(255, 255, 255, 0.8);
  margin: 15px 0;
}

.output::before {
  content: "> ";
}

/*
.input {
  color: rgba(192, 255, 192, 0.8);
  text-shadow:
      0 0 1px rgba(51, 255, 51, 0.4),
      0 0 2px rgba(255, 255, 255, 0.8);
}

.input::before {
  content: "$ ";
}
*/

.link {
  color: #fff;
  text-decoration: none;
  cursor: pointer;
}

.link:hover, .link:focus {
  text-decoration: underline !important;
}

.link::before {
  content: "[";
}

.link::after {
  content: "]";
}

.errorcode {
  color: white;
}